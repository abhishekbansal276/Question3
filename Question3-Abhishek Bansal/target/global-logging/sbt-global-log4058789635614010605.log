[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 11.0.21)
[debug] Load.defaultLoad until apply took 151.3282ms
[debug]           Load.loadUnit: plugins took 136.7581ms
[debug]           Load.loadUnit: defsScala took 0.3843ms
[debug] [Loading] Scanning directory E:\Question3-Abhishek Bansal\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Question3-Abhishek Bansal\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.6328 ms
[debug]               Load.resolveProject(question3-abhishek-bansal-build) took 50.337ms
[debug]             Load.loadTransitive: finalizeProject(Project(id question3-abhishek-bansal-build, base: E:\Question3-Abhishek Bansal\project, plugins: List(<none>))) took 103.7393ms
[debug] [Loading] Done in E:\Question3-Abhishek Bansal\project, returning: (question3-abhishek-bansal-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 130.4139ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.2349ms
[debug]         Load.loadUnit(file:/E:/Question3-Abhishek%20Bansal/project/, ...) took 274.324ms
[debug]       Load.apply: load took 544.1706ms
[debug]       Load.apply: resolveProjects took 7.4171ms
[debug]       Load.apply: finalTransforms took 67.7694ms
[debug]       Load.apply: config.delegates took 7.741ms
[debug]       Load.apply: Def.make(settings)... took 1044.8286ms
[debug]       Load.apply: structureIndex took 205.4451ms
[debug]       Load.apply: mkStreams took 2.7949ms
[info] loading project definition from E:\Question3-Abhishek Bansal\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3339.4554ms
[debug]     Load.loadUnit: defsScala took 0.0092ms
[debug] [Loading] Scanning directory E:\Question3-Abhishek Bansal
[debug]       Load.loadUnit: mkEval took 5.9684ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1006 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 4.7028ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\Question3-Abhishek Bansal, plugins: List(<none>))) took 8.5118ms
[debug] [Loading] Done in E:\Question3-Abhishek Bansal, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 196.2588ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.9547ms
[debug]   Load.loadUnit(file:/E:/Question3-Abhishek%20Bansal/, ...) took 3544.3931ms
[debug] Load.apply: load took 3566.0882ms
[debug] Load.apply: resolveProjects took 0.1959ms
[debug] Load.apply: finalTransforms took 10.0123ms
[debug] Load.apply: config.delegates took 0.4408ms
[debug] Load.apply: Def.make(settings)... took 96.754ms
[debug] Load.apply: structureIndex took 26.9217ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to Question3-Abhishek Bansal (in build file:/E:/Question3-Abhishek%20Bansal/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-ec838cccade4a702e577
[debug] Writing bsp connection file
[info] started sbt server
